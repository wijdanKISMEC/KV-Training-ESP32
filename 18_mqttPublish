#include <WiFi.h>
#include <PubSubClient.h>

// Replace with yours (connection WiFi)
#define ssid "industry4"
#define password "industryiot#4"

//Replace with yours (connection to MQTT Broker)
#define clientName "ESP32_wijdan"
#define mqtt_server "broker.hivemq.com"
#define topic "kismec/lab3/temp"


WiFiClient espClient;
PubSubClient client(espClient);
long lastMsg = 0;
char msg[50];
int reading = 0;

void setup() {
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  
}


void setup_wifi() {
  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}


void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Attempt to connect
    if (client.connect(clientName)) {
      Serial.println("connected");
    } 
    else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  
  long now = millis();
  if (now - lastMsg > 5000) {
    lastMsg = now;
   
    reading = random(1,20);   
    
    // Convert the value to a char array
    char payload[8];
    dtostrf(reading, 1, 2, payload);
    Serial.print("Payload: ");
    Serial.println(payload);
    client.publish(topic, payload);

    
  }
}
